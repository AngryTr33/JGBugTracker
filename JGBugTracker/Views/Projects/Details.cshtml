@using JGBugTracker.Models.Enums
@using JGBugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@model JGBugTracker.Models.Project

@*// Inject History Service*@
@*@inject IBTTicketHistoryService HistoryService*@
@inject IBTFileService _fileService
@inject IBTRolesService _rolesService
@inject IBTProjectService _projectService
@inject UserManager<BTUser> _userManager

@{
    ViewData["Title"] = "Details";
    BTUser btUser = await _userManager.GetUserAsync(User);
    BTUser projectManager = await _projectService.GetProjectManagerAsync(Model.Id);
}

<h1>Details</h1>

<div>
    <div class="container-fluid">
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="body">
                            @* Project Name *@
                            <h5>[Project Name]</h5>
                            @* Project Description *@
                            <p>[Project description]</p>
                            <div class="progress-container progress-info m-b-25">
                                <span class="progress-badge" style="font-size:small">Project Status</span>
                                <div class="progress">
                                    @* Razor code block *@
                                    <div class="progress-container progress-info m-b-25">
                                        <span class="progress-badge" style="font-size:small">Project Status</span>
                                        <div class="progress">
                                            @* Razor code block *@
                                            @{
                                                var start = Model.StartDate;
                                                var end = Model.EndDate;
                                                var today = DateTime.Now;
                                                var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                            }
                                            <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                                @* Use Progress Bar code variable here *@
                                                <span class="progress-value">@percent%</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                        @* Use Progress Bar code variable here *@
                                        <span class="progress-value">100%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="body">
                            <ul class=" list-unstyled basic-list">
                                <li>Start Date: <span class="">[Project Start Date]</span></li>
                                <li>Deadline: <span class="">[Project End Date]</span></li>
                                <li>Priority: <span class="">[Project Priority? Name]</span></li>
                                @* if() logic *@
                                [Project Active/Inactive]
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="header">
                            <h2>Project Manager</h2>
                            <hr />
                        </div>
                        <div class="body" style="overflow-y:auto;height:300px;">
                            [Project Manager]
                            @* if() logic for Avatar/Default etc *@

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="header">
                            <h2>Project Team</h2>
                            <hr />
                        </div>
                        <div class="body" style="overflow-y:auto;height:300px;">
                            <ul class="right_chat list-unstyled mb-0">

                                @foreach (BTUser member in Model.Members)
                                {
                                    <li>@(await _rolesService.GetUserRoleAsync(member)): @member.FullName</li>
                                }

                            </ul>

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div class="bg-dark">
                    <div class="card m-1 p-2">
                        <div class="header">
                            <h2>Project Activity</h2>
                            <hr />
                        </div>
                        <div class="body" style="overflow-y:auto;height:300px;background-color:antiquewhite">
                            @* Project Activity loop *@
                            [Project Activity  e.g. Ticket History]
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-md-12 col">
                <div class="mt-5 bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="header">
                            <h2>Tickets</h2>
                        </div>
                        <div class="body">
                            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                <table class="table table-hover">
                                    <thead class="">
                                        <tr>
                                            @* Table header *@
                                            [Ticket Table header]
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @* Table body *@
                                        [Ticket Table body]
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<tr>
    <th>Title</th>
    <th>Developer</th>
    <th>Status</th>
    <th>Priority</th>
    <th>Date</th>
    <th>Action</th>
</tr>
  @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
  {
      <tr>
          <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
          <td>
              @if (ticket.DeveloperUserId != null)
              {
                  @ticket.DeveloperUser?.FullName
              }
              else
              {
                  if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                  {
                      <a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Home" asp-route-ticketId="@ticket.Id">Assign Dev</a>
                  }

              }
          </td>
          @if (ticket.TicketStatus!.Name == "New")
          {
              <td><span class="">@ticket.TicketStatus.Name </span></td>

          }
          else
          {
              <td><span class="">@ticket.TicketStatus.Name </span></td>
          }
          <td><span class="">@ticket.TicketPriority!.Name </span></td>
          <td>@ticket.Created.ToString("MM-dd-yyyy")</td>
          <td>
              <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
              @if (ticket.DeveloperUserId == btUser.Id || ticket.SubmitterUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(BTRoles.Admin)))
              {
                  <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-pencil"></i></a>
              }

              @if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
              {
                  <a class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a>
              }
          </td>
      </tr>
  }

<div>
    <h4>Project</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProjectPriority.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProjectPriority.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImageFileName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImageFileName)
        <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageFileContentType)
        </dt>
        <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ImageFileContentType)
        </dd>
        <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageFileData)
        </dt>
        <dd class="col-sm-10">

                @if (Model.ImageFileData != null)
                {
                <img class="img-fluid" src="@_fileService.ConvertByteArrayToFile(Model.ImageFileData!, Model.ImageFileContentType!)">
                }
        </dd>
        <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Archived)
        </dt>
        <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Archived)
        </dd>
    </dl>
    <div class="row">
        <div class="card">
            <h5>Project Members</h5>
            @foreach (BTUser member in Model.Members)
            {
                <p>@(await _rolesService.GetUserRoleAsync(member)): @member.FullName</p>
            }
        </div>
    </div>
</div>
<div>
    @if (User.IsInRole(nameof(BTRoles.Admin)))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> <span>|</span>
    }
    <a asp-action="AllProjects">Back to All Projects</a>
</div>
